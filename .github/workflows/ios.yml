name: iOS app
on:
    pull_request:
        paths:
            - ".github/workflows/ios.yml"
            - "ios/.swiftformat"
            - "ios/**/*.swift"
    # Build if requested manually from the Actions tab
    workflow_dispatch:
jobs:
    check-formatting:
        name: Check formatting
        runs-on: macos-11
        steps:
            - name: Install SwiftFormat
              uses: fjcaetano/mint-action@v1.0.2
              with:
                package: nicklockwood/SwiftFormat@0.49.13

            - name: Update PATH
              run: echo "$HOME/.mint/bin" >> $GITHUB_PATH

            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Check formatting
              run: |
                swiftformat --version
                swiftformat --lint .

    test:
        name: Unit tests
        runs-on: macos-11
        strategy:
            matrix:
                destination: ['platform=iOS Simulator,OS=13.7,name=iPhone 8']
        env:
            source_packages_dir: .spm
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Configure cache
              uses: actions/cache@v3
              with:
                path: ios/${{ env.source_packages_dir }}
                key: ${{ runner.os }}-spm-${{ hashFiles('ios/**/Package.resolved') }}
                restore-keys: |
                  ${{ runner.os }}-spm-

            - name: Setup go-lang
              uses: actions/setup-go@v3
              with:
                  go-version: '1.16.5'

            - name: Prepare iOS simulator
              run: |
                  sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
                  sudo ln -s /Applications/Xcode_11.7.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 13.7.simruntime

            - name: Configure Xcode project
              run: |
                  cp Base.xcconfig.template Base.xcconfig
                  cp App.xcconfig.template App.xcconfig
                  cp PacketTunnel.xcconfig.template PacketTunnel.xcconfig
                  cp Screenshots.xcconfig.template Screenshots.xcconfig
              working-directory: ios/Configurations

            - name: Convert Package.resolved v2 -> v1
              run: |
                  jq '{
                    "object": {
                      "pins": .pins | map({
                        "package": .identity,
                        "repositoryURL": .location,
                        "state": .state
                      })
                    },
                    "version": 1
                  }' Package.resolved > Package.resolved.out
                  mv Package.resolved.out Package.resolved
              working-directory: ios/MullvadVPN.xcodeproj/project.xcworkspace/xcshareddata/swiftpm

            - name: Build and test
              run: |
                  xcodebuild test \
                      -project MullvadVPN.xcodeproj \
                      -scheme MullvadVPNTests \
                      -destination "${destination}" \
                      -clonedSourcePackagesDirPath "${SOURCE_PACKAGES_PATH}" \
                      CODE_SIGN_IDENTITY="" \
                      CODE_SIGNING_REQUIRED=NO \
                      ONLY_ACTIVE_ARCH=YES
              working-directory: ios
              env:
                  destination: ${{ matrix.destination }}
                  SOURCE_PACKAGES_PATH: ${{ env.source_packages_dir }}
